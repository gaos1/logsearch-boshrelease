# conventions:
#   resources: {adjective}-{noun}
#   jobs: {verb}-{adjective}-{noun}
#   versions:
#     semver: true
#     prerelease:
#       dev:
#         - bumped off the last stable version
#         - non-indicative of if it will land in a major|minor|patch

#
# use stuff
#

resources:

  #
  # our repository and main branch
  #

  - name: "repo-master"
    type: "git"
    source:
      uri: {{repo-master-uri}}
      branch: {{repo-master-branch}}

  #
  # the internal version concourse is working off
  #

  - name: "version"
    type: semver
    source:
      bucket: {{release-bucket}}
      key: "version/concourse"
      access_key_id: {{release-access-key}}
      secret_access_key: {{release-secret-key}}

  #
  # our development release - use at your own risk
  #

  - name: "dev-release"
    type: s3
    source:
      bucket: {{release-bucket}}
      regexp: "logsearch-(.*).tgz"
      access_key_id: {{release-access-key}}
      secret_access_key: {{release-secret-key}}

  #
  # a fairly simple deployment where we can run some tests
  #

  - name: sanity-test-deployment
    type: bosh-deployment
    source:
      target: {{test-director-target}}
      username: {{test-director-username}}
      password: {{test-director-password}}
      deployment: "sanity-test"
      ignore_ssl: yes

  #
  # bosh.io
  # not currently used, but is a required input for our bosh-deployment resource
  #

  - name: "bosh-stemcell-aws"
    type: "bosh-io-stemcell"
    source:
      name: "bosh-aws-xen-hvm-ubuntu-trusty-go_agent"

#
# do stuff
#

jobs:

  #
  # create a dev release for ourselves
  #

  - name: "publish-dev-release"
    public: true
    plan:
      - aggregate:
          - get: "repo"
            resource: "repo-master"
            trigger: true
          - get: "version"
            params:
              pre: "dev"
      - task: "create-dev-release"
        file: "repo/ci/tasks/create-release/task.yml"
      - put: "version"
        params:
          file: "version/number"
      - put: "dev-release"
        params:
          from: "repo/dev_releases/logsearch/logsearch-(.+).tgz"
          to: "dev_releases/"

  #
  # run some sanity tests against a dev release
  #
  
  - name: "deploy-sanity-test"
    public: true
    plan:
      - get: "repo"
        resource: "repo-master"
        trigger: true
        passed:
          - "publish-dev-release"
      - get: "release"
        resource: "dev-release"
      - task: "deploy"
        file: "repo/ci/tasks/repo-deploy/task.yml"
        config:
          params:
            BOSH_TARGET: {{test-director-target}}
            BOSH_USERNAME: {{test-director-username}}
            BOSH_PASSWORD: {{test-director-password}}
            RELEASE_PATH: "release/*.tgz"
            DEPLOYMENT_PATH: "ci/tasks/standalone-test/deployment.yml"
      - task: "sanity-test"
        file: "repo/ci/tasks/standalone-test/task.yml"
        config:
          params:
            BOSH_TARGET: {{test-director-target}}
            BOSH_USERNAME: {{test-director-username}}
            BOSH_PASSWORD: {{test-director-password}}
      - task: "undeploy"
        file: "repo/ci/tasks/repo-undeploy/task.yml"
        config:
          params:
            BOSH_TARGET: {{test-director-target}}
            BOSH_USERNAME: {{test-director-username}}
            BOSH_PASSWORD: {{test-director-password}}
            DEPLOYMENT_NAME: "logsearch-standalone-test"

  #
  # shipper rules need to be built and tested
  #
  
  - name: "test-logsearch-shipper-filters"
    public: true
    plan:
      - get: "repo"
        resource: "repo-master"
        trigger: true
        passed:
          - "publish-dev-release"
      - task: "build-and-test"
        file: "repo/ci/tasks/logsearch-shipper-filters-test/task.yml"
